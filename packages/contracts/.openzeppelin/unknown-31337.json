{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xCD8a1C3ba11CF5ECfa6267617243239504a98d90",
    "txHash": "0x9472c1516a75619f2adbca73e64c190c6ce1bf4fb21ab61389bd80b6b9857de4"
  },
  "proxies": [
    {
      "address": "0x82e01223d51Eb87e16A03E24687EDF0F294da6f1",
      "txHash": "0x6f0c0ac14ef43137161df0e8dd2a4b5df4cfb60866fc42ba67eeac961a7652b8",
      "kind": "transparent"
    }
  ],
  "impls": {
    "8ffb44e09cc3f68fe06d39d737dcee40e909ee4acc6411017347d976e00929c6": {
      "address": "0xb7278A61aa25c888815aFC32Ad3cC52fF24fE575",
      "txHash": "0x2eb9c083390db6c6059337a6ff5af64b68f63c122bb64351325e5dc535b1f682",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "_winners",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_array(t_uint256)dyn_storage)",
            "contract": "Ballot",
            "src": "contracts/Ballot.sol:19"
          },
          {
            "label": "_pollsByOwner",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
            "contract": "Ballot",
            "src": "contracts/Ballot.sol:21"
          },
          {
            "label": "_polls",
            "offset": 0,
            "slot": "103",
            "type": "t_struct(Map)3376_storage",
            "contract": "Ballot",
            "src": "contracts/Ballot.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "Ballot",
            "src": "contracts/Ballot.sol:253"
          },
          {
            "label": "_voters",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_mapping(t_address,t_struct(Encoded)3777_storage))",
            "contract": "CondorcetVoting",
            "src": "contracts/CondorcetVoting.sol:22"
          },
          {
            "label": "_rank",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_array(t_uint256)dyn_storage)dyn_storage",
            "contract": "CondorcetVoting",
            "src": "contracts/CondorcetVoting.sol:25"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)48_storage",
            "contract": "CondorcetVoting",
            "src": "contracts/CondorcetVoting.sol:230"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "SchulzeVoting",
            "src": "contracts/SchulzeVoting.sol:132"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_array(t_uint256)dyn_storage)dyn_storage": {
            "label": "uint256[][]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(address => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Encoded)3777_storage)": {
            "label": "mapping(address => struct Vote.Encoded)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(bytes32 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_struct(Encoded)3777_storage))": {
            "label": "mapping(bytes32 => mapping(address => struct Vote.Encoded))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Poll)3367_storage)": {
            "label": "mapping(bytes32 => struct EnumerablePollsMap.Poll)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Bytes32Set)843_storage": {
            "label": "struct EnumerableSetUpgradeable.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)649_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Encoded)3777_storage": {
            "label": "struct Vote.Encoded",
            "members": [
              {
                "label": "data",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Map)3376_storage": {
            "label": "struct EnumerablePollsMap.Map",
            "members": [
              {
                "label": "_keys",
                "type": "t_struct(Bytes32Set)843_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_values",
                "type": "t_mapping(t_bytes32,t_struct(Poll)3367_storage)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Poll)3367_storage": {
            "label": "struct EnumerablePollsMap.Poll",
            "members": [
              {
                "label": "finished",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "candidates",
                "type": "t_uint32",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "owner",
                "type": "t_address",
                "offset": 5,
                "slot": "0"
              },
              {
                "label": "uri",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "expire",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "votes",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Set)649_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
